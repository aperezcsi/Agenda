@page "/search"
@using Agenda.Shared.Models;
@using System.ComponentModel.DataAnnotations;
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Buscar Contacto</h3>

<EditForm Model="@_contact" >
    <DataAnnotationsValidator />
    <div class="form-group">
            @if(name==null || name==""){
                <ValidationMessage For="() => _contact._name" />
            }
        <label>Nombre: </label>
        <InputText @bind-Value="name" />
        <button type="submit" class="btn btn-success" @onclick="(() => searchByName(name))">Buscar Contacto</button>
    </div>

    <div class="alert alert-secondary mt-4">
        <span class="oi oi-person me-2" aria-hidden="true"></span>
    <strong>Información del contacto</strong><br><br>
    <span class="text-nowrap">
    <p>Nombre: @nameSearch</p>
    <p>Teléfono: @landline</p>
    <p>Celular: @cellphone</p>
    </span>

</div>
</EditForm>

@code {

    private Contact _contact = new();

    private string name;

    private string nameSearch;
    private string landline;
    private string cellphone;

    private async Task searchByName(string name){
        Contact contact = await Http.GetFromJsonAsync<Contact>($"/api/Contact/{name}"); 

        nameSearch = contact._name;
        landline = contact._landline;
        cellphone = contact._cellphone;   
    }
    
}
