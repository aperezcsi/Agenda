@page "/delete"
@using Agenda.Shared.Models;
@inject IJSRuntime jsRuntime;
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Eliminar Contacto</h3>

<EditForm Model="@_contact" >
    <DataAnnotationsValidator />
    <div class="form-group">
            @if(name==null || name==""){
                <ValidationMessage For="() => _contact._name" />
            }
        <label>Nombre: </label>
        <InputText @bind-Value="name" />
        <button type="submit" class="btn btn-success" @onclick="(() => DeleteContact(name))">Eliminar Contacto</button>
    </div>

    <div class="alert alert-secondary mt-4">
        <span class="oi oi-person me-2" aria-hidden="true"></span>
    <strong>Información del contacto</strong><br><br>
    <span class="text-nowrap">
    </span>

</div>
</EditForm>

@code {

    private Contact _contact = new();

    private string name;

    private async Task DeleteContact(string name){

        await Http.DeleteAsync($"/api/Contact/{name}");
        await Http.DeleteAsync("https://localhost:7040/api/Contact");
        await jsRuntime.InvokeVoidAsync("alert", "Contacto Eliminado Satisfactoriamente");
        Navigation.NavigateTo("/contacts");
    }
    
}
