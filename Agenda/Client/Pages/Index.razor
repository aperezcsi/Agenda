@page "/contacts"
@using Agenda.Shared.Models;
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Agenda</PageTitle>

<h1>Lista de Contactos</h1>

Contactos Disponibles 

@if (_contacts == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Telefono</th>
                <th>Celular</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contact in _contacts)
            {
                <tr>
                    <td>@contact._name</td>
                    <td>@contact._landline</td>
                    <td>@contact._cellphone</td>
                    <td>
                        <!--<button class="btn btn-info"
                                @onclick="(() => Edit(contact._name))">
                            Edit
                        </button>-->
                        <button class="btn btn-danger"
                                @onclick="(() => Delete(contact._name))">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    
    private List<Contact> _contacts;
    
    protected override async Task OnInitializedAsync()
    {
        _contacts = await Http.GetFromJsonAsync<List<Contact>>("https://localhost:7040/api/Contact");
    }
    private async Task Delete(string name)
    {
        await Http.DeleteAsync($"/api/Contact/{name}");
        _contacts = await Http.GetFromJsonAsync<List<Contact>>("https://localhost:7040/api/Contact");
        StateHasChanged();
    }
    private void Edit(string name)
    {
        Navigation.NavigateTo($"/contact/edit/{name}");
    }
}


